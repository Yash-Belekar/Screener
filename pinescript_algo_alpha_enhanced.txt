//@version=5
strategy("Adaptive SuperTrend + EMA244 Strategy", "AlgoAlpha Enhanced", overlay=true, margin_long=100, margin_short=100)


// Original Indicator Settings (identical to your provided code)
atr_len = input.int(10, "ATR Length", group="SuperTrend Settings")
fact = input.float(3, "SuperTrend Factor", group="SuperTrend Settings")
training_data_period = input.int(100, "Training Data Length", group="K-Means Settings")
highvol = input.float(0.75, "High Volatility Percentile", maxval=1, group="K-Means Settings")
midvol = input.float(0.5, "Medium Volatility Percentile", maxval=1, group="K-Means Settings")
lowvol = input.float(0.25, "Low Volatility Percentile", maxval=1, group="K-Means Settings")


// EMA 244 Confirmation
emaLength = input.int(1440, "EMA Length", minval=1)
ema244 = ta.ema(close, emaLength)
ema_filter = input.bool(true,'Use ema as filter?')


// Risk Management
riskRewardRatio = input.float(2.0, "Risk/Reward Ratio", minval=1.0, step=0.5)


// Original Indicator Logic (unchanged)
pine_supertrend(factor, atr) =>
    src = hl2
    upperBand = src + factor * atr
    lowerBand = src - factor * atr
    prevLowerBand = nz(lowerBand[1])
    prevUpperBand = nz(upperBand[1])


    lowerBand := lowerBand > prevLowerBand or close[1] < prevLowerBand ? lowerBand : prevLowerBand
    upperBand := upperBand < prevUpperBand or close[1] > prevUpperBand ? upperBand : prevUpperBand
    int _direction = na
    float superTrend = na
    prevSuperTrend = superTrend[1]
    if na(atr[1])
        _direction := 1
    else if prevSuperTrend == prevUpperBand
        _direction := close > upperBand ? -1 : 1
    else
        _direction := close < lowerBand ? 1 : -1
    superTrend := _direction == -1 ? lowerBand : upperBand
    [superTrend, _direction]


volatility = ta.atr(atr_len)
upper = ta.highest(volatility, training_data_period)
lower = ta.lowest(volatility, training_data_period)
high_volatility = lower + (upper-lower) * highvol
medium_volatility = lower + (upper-lower) * midvol
low_volatility = lower + (upper-lower) * lowvol


iterations = 0
size_a = 0
size_b = 0
size_c = 0


hv = array.new_float()
mv = array.new_float()
lv = array.new_float()
amean = array.new_float(1,high_volatility)
bmean = array.new_float(1,medium_volatility)
cmean = array.new_float(1,low_volatility)


if nz(volatility) > 0 and bar_index >= training_data_period-1
    while ((amean.size() == 1 ? true : (amean.first() != amean.get(1))) or (bmean.size() == 1 ? true : (bmean.first() != bmean.get(1))) or (cmean.size() == 1 ? true : (cmean.first() != cmean.get(1))))
        hv.clear()
        mv.clear()
        lv.clear()
        for i = training_data_period-1 to 0
            _1 = math.abs(volatility[i] - amean.first())
            _2 = math.abs(volatility[i] - bmean.first())
            _3 = math.abs(volatility[i] - cmean.first())
            if _1 < _2 and _1 < _3
                hv.unshift(volatility[i])
            if _2 < _1 and _2 < _3
                mv.unshift(volatility[i])
            if _3 < _1 and _3 < _2
                lv.unshift(volatility[i])
       
        amean.unshift(hv.avg())
        bmean.unshift(mv.avg())
        cmean.unshift(lv.avg())
        size_a := hv.size()
        size_b := mv.size()
        size_c := lv.size()
        iterations := iterations + 1


hv_new = amean.first()
mv_new = bmean.first()
lv_new = cmean.first()
vdist_a = math.abs(volatility - hv_new)
vdist_b = math.abs(volatility - mv_new)
vdist_c = math.abs(volatility - lv_new)


distances = array.new_float()
centroids = array.new_float()
distances.push(vdist_a)
distances.push(vdist_b)
distances.push(vdist_c)
centroids.push(hv_new)
centroids.push(mv_new)
centroids.push(lv_new)


cluster = distances.indexof(distances.min()) // 0 for high, 1 for medium, 2 for low
assigned_centroid = cluster == -1 ? na : centroids.get(cluster)


[ST, dir] = pine_supertrend(fact, assigned_centroid)


// Strategy Logic with EMA 244 Confirmation
longSignal = ta.crossunder(dir, 0)  // Original buy signal from Adaptive SuperTrend
shortSignal = ta.crossover(dir, 0)  // Original sell signal from Adaptive SuperTrend


// EMA 244 Confirmation Conditions
emaLongConfirm = ema_filter ? close > ema244 : true
emaShortConfirm = ema_filter ? close < ema244 : true


// Final Entry Conditions
enterLong = longSignal and emaLongConfirm
enterShort = shortSignal and emaShortConfirm


// Calculate position size and risk management
atrValue = ta.atr(14)
stopLossDistance = atrValue * 1.5
takeProfitDistance = stopLossDistance * riskRewardRatio


// Execute trades
if (enterLong)
    strategy.entry("Long", strategy.long)
    strategy.exit("Exit Long", "Long", stop=ST - stopLossDistance, limit=ST + takeProfitDistance)


if (enterShort)
    strategy.entry("Short", strategy.short)
    strategy.exit("Exit Short", "Short", stop=ST + stopLossDistance, limit=ST - takeProfitDistance)


// Visual Improvements
plot(ST, color=dir > 0 ? color.green : color.red, title="SuperTrend Line", linewidth=2)
plot(ema244, color=color.blue, title="EMA 244", linewidth=2)


// Plot signals with different shapes for confirmed vs unconfirmed
plotshape(longSignal, style=shape.triangleup, location=location.belowbar, color=emaLongConfirm ? color.green : color.gray, size=size.small, title="Potential Buy")
plotshape(shortSignal, style=shape.triangledown, location=location.abovebar, color=emaShortConfirm ? color.red : color.gray, size=size.small, title="Potential Sell")


// Highlight confirmed signals
plotshape(enterLong, style=shape.labelup, location=location.belowbar, color=color.green, text="BUY", textcolor=color.white, size=size.small, title="Confirmed Buy")
plotshape(enterShort, style=shape.labeldown, location=location.abovebar, color=color.red, text="SELL", textcolor=color.white, size=size.small, title="Confirmed Sell")


// Background color for EMA confirmation zone
bgcolor(close > ema244 ? color.new(color.green, 90) : color.new(color.red, 90), title="EMA 244 Zone")
